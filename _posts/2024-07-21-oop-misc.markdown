---
layout: post
title:  "객체지향에 대한 잡생각"
date:   2024-07-21 08:00:05 +0800
categories: coding
use_math: true
tags: coding
---


최근 거의 십년이상 개발되어온 수십만라인 레거시 코드베이스에 작업을 하면서 든...잡생각
- 원래 몇개 더 있었는데 너무 어지러워서 걍지움 ㅋㅋ 주로 SRP에 대한 생각이 대부분. 결론 - SRP는 렘마도 아니고 절대명제다

생각보다 is-a 상속을 깔끔하게 쓰기 쉽지 않음 (리스코프 치환 지키면서)
- 이미 [커뮤니티에선](https://softwareengineering.stackexchange.com/questions/371707/why-the-industry-prefer-use-composition-over-inheritance) 다들 입아프게 떠드는 거긴 한데...프로덕션에서 다시 느낀 건 오랜만인 듯 ㅎㅎ 좋은 기회인 듯
- is-a에 맞게 상속을 사용하기보단 단순 코드 재사용 용으로 쓰는 경우가 대부분. 공통코드를 상위로 돌리고, 하부에선 super의 공통코드를 적절하게 호출하는 식


객체지항은 같은 코드라도 런타임에 설정값 기반으로 동작이 매번 달라질 수 있고 (다형성), 모든 경우의 수를 코드에 다 박아놓지 않고 설정값 기반으로 동작을 바꿔가며 대응가능한게 장점이긴 한데...
- 위의 애매한 상속과 겹처지면 이게 장점이 아니라 단점으로 바뀌고, 문제 2개가 만나 서로 곱해지는 느낌..ㅎ
- is-a에 맞지 않는 상속을 계속하다 보니 상속 하이어라키가 쌓이면 피곤해짐
    - 원래는 (=is-a에 잘 맞는 상속을 했다면) 상위클래스를 다 뜯어보지 않아도 어느정도 내용짐작이 되어야 하는데 중구난방이다 보니, 특정 하위 클래스의 런타임 동작을 짐작하려면
        - 상위클래스(들)의 코드를 다 뜯어보고
        - 그 중 어느것이 실행되고 어떤건 (override 등 되어) 실행되지 않는지 다 파악해야 함. 포인터는 상위 인터페이스지만 실체화된 객체는 외부설정에 따라 다를 수 있으니까..
- 심지어 외부설정값을 자체개발한 설정값 서버 등의 솔루션을 사용하는 경우....더 어려워짐
    - 위의 런타임 동작 짐작에서...여기저기에 흩어져 있는 외부설정값을 모아서 동작 path를 따라가 보는 것 까지 추가됨 ㅜㅜ
    - 설정값은 그냥 헬름차트 + 환경변수 쓰면 안되나..ㅎ 근데 환경변수는 레벨설정이 안되서 금방 더러위지긴 함. 이름에 못쓰는 케릭터도 꽤되고
    - 생각해보면 k8s 헬름차트도 환경변수를 파악하기 어렵게 여기저기 흩트려 놓을 수 있긴 함 ㅋㅋ

그럼 이걸 해결하려면? 잘 모르겠음 ㅋㅋ 다들 말하듯 공통코드는 우선 is-a 보단 has-a 컴포지션으로 써보는 게 더 좋은 방향인 것 같긴 함
- 이런 문제들 때문에 런타임 동작이 짐작조차 가지 않아도 테스트를 읽어서 동작을 좀 알게 된 경우가 많은 듯. 결국 테스트를 잘 넣는 것도 (간접적이지만...) 어느정도 해법에 들어가는 듯
- 코드가 난해해질수록 테스트가 문서 역할을 더 많이 하게 되는 듯. “개발당시 나는 내가 만든 걸 이렇게 써 주길 원했어요” 가 적힌 문서 느낌으로...반대로 테스트도 그런 느낌으로 작성해야 하기도 하고


그래도...다행히 나쁘지 않은 곳에 온 듯 ㅎㅎ 특히 메인 앱이 하나 있고 이 앱 내에서 코드가 서로 의존적인 부분이 많은 게 좋은 듯 (파악은 어렵지만 ㅎㅎ). 코드때문에 대가리 깨져봐야 생각을 많이 하게 되니까...
- 이전에는 뭐랄까...레포 자체에 코드는 꽤 있지만 서로 영향을 주지 않고, 단발성으로 각자 실행되는 코드들이라 변경 시 의존성 때문에 문제될 게 엄청 많진 않았음. 그래서 테스트가 별로 필요가 없어서...넣자고 말하기 좀 그랬음 ㅋㅋ 오버엔지니어링은 공공의 적이니까..


--------------------------

그나저나 요즘 공부기록엔 노션을 쓰면서...여긴 뭔가 취미 블로그처럼 되어버림 ㅎㅎ 이 글도 노션에 대충 끼적인 걸 정리한거긴 함...
왜 여기에 남는시간을 쪼개서 기술관련 글을 쓸 의욕이 안생기는지 생각해봤는데..일단 노션이 넘 편하고, 둘째로 robots.txt를 막은 게 큰 듯.  

나도 뭐 이젠 몇년전 반사회적 회피성 성격장애 (...) 보단 좀 사람같이 된 것 같은데, 슬슬 개발자로서 지금까지 도움을 받은 만큼 나눠야 하지 않나...생각인데 사이트가 비공개여서 읽는 사람이 없어 큰 의욕이 안 나는 듯. 뭐 공개한다고 읽는사람이 생기는 건 아니지만 ㅋㅋ  
나름 관련 일을 하게 된 만큼 [다음번 블로그](https://github.com/frostbyte134/frostbyte134.github.io/issues/5)는 robots를 허용하고 검색엔진에 노출해 볼 생각...인데 ㅋㅋ 과연

이 블로그도 칠팔년쯤 된 듯 한데...할 만큼 한 느낌 ㅎㅎ  
대충 취미 한두번 끄적이다가 닫게 될 듯.

https://www.youtube.com/watch?v=B4crMzoOTRE
- md파일은 유튭 자동재생도 안됨..ㅎ