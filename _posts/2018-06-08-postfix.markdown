---
layout: post
title:  "BOJ 1918 : 후위표기식, 1935 : 후위표기식 2"
date:   2018-06-08 09:45:05 +0800
categories: problem_solving
use_math: true
tags: problem_solving stack
problem: 1918
---
이것도 넘 오랬만에 봐서 다 까먹었네...버벅거림  

1. 전위연산자 -> 후위연산자  
<a target="_blank" href="https://www.acmicpc.net/problem/{{page.problem}}">https://www.acmicpc.net/problem/{{page.problem}}</a><br/>
스택이 2가지 역할을 함. 우선 괄호()를 쪼개는 역할. 맨날 스택으로 하던 그것. 괄호의 우선순위를 제일 낮게 준 후, (이 나오면 넣고 )이 나오면 (이 나온곳까지 다 빼게 해서 해당 레벨 부분만 처리가능하게 함.  
두 번째로는 A(oper)B의 순서를 AB(oper)로 바꾸는 역할. 이렇게 바꾸기 위해 숫자들은 바로바로 출력하고 연산자들은 스택에 넣을 것인데, 이 때 중요한 것이 스택은 결국 FIFO이므로 맨 위에 우선순위가 가장 높은 연산자가 있어야 한다는 것. 이 순서만 지켜지면 연산자들은 스택에 계속 넣어도 됨. 출력되는 숫자들에 역순으로 연산자를 적용하면 되므로..하지만 스택에 삽입 시 이 순서가 어겨지면, 스택에서 현재 연산자보다 우선순위가 높은 연산자들을 순서대로 꺼내서 출력 후 스택에 삽입해줘야 함. 연산자 우선순위가 어겨진다는 것은 현재 레벨에서 이전 결과를 다 계산한 것에 현재 연산자가 적용된다는 뜻임.

  
2. 후위연산자->전위연산자
<a target="_blank" href="https://www.acmicpc.net/problem/1935">https://www.acmicpc.net/problem/1935</a><br/>
우선, 후위연산자 표기법은 왼쪽부터 봤을 시 무조건 나오는 첫 번째 연산자는 AB(oper)형태임. 후위연산자 표기법은 <-방향으로 계산을 진행하기 때문. 따라서 ->부터 값들은 스택에 저장해 놨다가, 연산자를 만날 때 마다 맨 위에 두개 (반드시 있음)에 연산을 적용해 주면 됨. 
