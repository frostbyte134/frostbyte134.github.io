---
layout: post
title:  "BOJ 3015: 오아시스 재결합"
date:   2018-05-22 09:49:00 +0900
categories: problem_solving
use_math: true
tags: problem_solving segment_tree dnq stack reference_problem
problem: 3015
---

<a target="_blank" href="https://www.acmicpc.net/problem/{{page.problem}}">https://www.acmicpc.net/problem/{{page.problem}}</a><br/><br/>
  
{:.deccounter}
1. 스택이 약한 내림차순을 유지하게 함
2. stack.top.value < ary[cur] 일시  
스택에 ary[cur]보다 큰 item이 남을때까지 pop. 이 item들은 __일단__ 오른쪽으로 ary[cur]를 볼 수 있으므로 답에 +1해줌.  
3. 스택이 비지 않았다면, 스택의 top에서 현재 ary[cur]을 볼 수 있는 것이므로 또 +1해줌.
4. `(중요)` 위의 pop까지 다 한 뒤 현재 stack.top과 ary[cur]이 같아지는 경우, ary[cur]은 stack.top의 왼쪽에 있는 같은 값의 모든 원소를 볼 수 있음. 따라서 스택은 pair<int, int>로, (값, 왼쪽에 있는 개수)를 저장해야 함. 같은 경우 스택에 넣을때 2번째에는 stack.top.second + 1을 해 줌. 아닌 경우 그냥 1. 어쨋건 ary[cur]은 바로 왼쪽에 있는 ary[cur-1]을 항상 볼 수 있기 때문. 스택에 아직 ary[cur]을 넣지 않았기 때문에 세어지지 않은 값임.
5. 스택에 ary[cur]을 넣음. 
{:.deccounter}

4번을 생각 못해 오래걸림...  
근데 이거 구간트리로도 풀 수 있나? 일단 max query가 필요할 것 같긴 한데 잘 모르겠음