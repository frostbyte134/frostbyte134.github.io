---
layout: post
title:  "BOJ 11577: Condition of deep sleep"
date:   2018-03-04 15:12:05 
categories: problem_solving
use_math: true
tags: problem_solving need_review simulation
problem: 11577
---

<a target="_blank" href="https://www.acmicpc.net/problem/{{page.problem}}">https://www.acmicpc.net/problem/{{page.problem}}</a><br/><br/>
  
1. 문제를 왼쪽에서 풀던 오른쪽에서 풀던, 껐던 (또는 처음부터 꺼져있던) 전구를 다시 킬 필요는 없다.
끝에부터 생각하면 확실해지는듯. 왼쪽부터 끈다치면, 마지막엔 결국  
-1. i개가 켜져있고,  
-2. 왼쪽에는 k-i개가 꺼져있고 그 왼쪽으로는 i개가 켜저있어야 함.  
여기 왼쪽에 꺼진 전구 몇개 붙여봤자 의미가 없음.

2. 결국 시뮬레이션인데, n=100,000이고 k≤n이라 각 i번째 위치에서 k개의 전구를 끄고 키는 단순 O(nk) 시뮬레이션으로는 시간초과가 남.
답은 부분합 활용하기.  
-1. 부분합은 초기에 0.  
-2. 부분합과 다른 전구 (초기엔 1)이 들어왔으면, 현재 i번째의 부분합을 +1시키고 n+k번째 (n~n+k−1개를 건너뛰는 효과) 부분합을 -1시킴.  
결국 n+k번째에서는 다시 원래 parity로으로 돌아가지만, 그 사이에서는 반대의 parity를 지니게 됨. 중첩도 되므로 완벽.

이 테크닉이 쓰이는 문제가 있으려나.....